name: Tests and Quality Checks

on:
    push:
        branches: [main, develop, refactor]
    pull_request:
        branches: [main, develop, refactor]

jobs:
    test:
        name: Run Tests
        runs-on: ubuntu-latest

        strategy:
            matrix:
                node-version: [18.x, 20.x]

        steps:
            - name: Checkout code
              uses: actions/checkout@v4

            - name: Setup pnpm
              uses: pnpm/action-setup@v4
              with:
                  version: 10

            - name: Setup Node.js ${{ matrix.node-version }}
              uses: actions/setup-node@v4
              with:
                  node-version: ${{ matrix.node-version }}
                  cache: 'pnpm'

            - name: Install dependencies
              run: pnpm install --frozen-lockfile

            - name: Run TypeScript type check
              run: pnpm type-check
              continue-on-error: true # Continue for now due to existing service errors

            - name: Run ESLint
              run: pnpm lint
              continue-on-error: true # Continue for now, improve gradually

            - name: Run tests with coverage
              run: pnpm test:ci

            - name: Upload coverage to Codecov
              uses: codecov/codecov-action@v3
              if: matrix.node-version == '20.x'
              with:
                  file: ./coverage/lcov.info
                  flags: unittests
                  name: codecov-umbrella
                  fail_ci_if_error: false

            - name: Comment coverage on PR
              if: github.event_name == 'pull_request' && matrix.node-version == '20.x'
              uses: romeovs/lcov-reporter-action@v0.3.1
              with:
                  lcov-file: ./coverage/lcov.info
                  github-token: ${{ secrets.GITHUB_TOKEN }}
                  delete-old-comments: true

    build:
        name: Build Check
        runs-on: ubuntu-latest
        needs: test

        steps:
            - name: Checkout code
              uses: actions/checkout@v4

            - name: Setup pnpm
              uses: pnpm/action-setup@v4
              with:
                  version: 10

            - name: Setup Node.js
              uses: actions/setup-node@v4
              with:
                  node-version: '20.x'
                  cache: 'pnpm'

            - name: Install dependencies
              run: pnpm install --frozen-lockfile

            - name: Build project
              run: pnpm build
              env:
                  # Public env vars
                  NEXT_PUBLIC_HEDERA_NETWORK: testnet
                  NEXT_PUBLIC_HEDERA_MIRROR_NODE_URL: https://testnet.mirrornode.hedera.com
                  
                  # Server env vars (dummy values for build)
                  DEPOSIT_WALLET_ID: '0.0.12345'
                  DEPOSIT_WALLET_KEY: '302e020100300506032b65700422042000000000000000000000000000000000000000000000000000000000000000'
                  INSTANT_WITHDRAW_WALLET_ID: '0.0.12346'
                  INSTANT_WITHDRAW_WALLET_KEY: '302e020100300506032b65700422042000000000000000000000000000000000000000000000000000000000000000'
                  EMISSIONS_ID: '0.0.12347'
                  EMISSIONS_KEY: '302e020100300506032b65700422042000000000000000000000000000000000000000000000000000000000000000'
                  RATE_PUBLISHER_ID: '0.0.12350'
                  RATE_PUBLISHER_KEY: '302e020100300506032b65700422042000000000000000000000000000000000000000000000000000000000000000'
                  USDC_TOKEN_ID: '0.0.12348'
                  HUSD_TOKEN_ID: '0.0.12349'
                  TOPIC_ID: '0.0.12351'
                  WITHDRAW_TOPIC_ID: '0.0.12352'
                  JWT_SECRET: 'dummy-jwt-secret-for-ci-build-only-not-for-production-use'
